{
  "swagger": "2.0",
  "info": {
    "title": "SS+ API",
    "version": "1.1",
    "license": {
      "name": "MIT"
    },
    "contact": {
      "name": "Sergii Sadovyi",
      "email": "s.sadovyi@deepvision.team"
    },
    "description": "Sabbath School API"
  },
  "host": "api.ss.deepvision.team",
  "definitions": {
    "m:project": {
      "type": "object",
      "title": "Project",
      "additionalProperties": false,
      "x-pcg": {
        "rest-alias": "projects",
        "pagination": true,
        "sort": {
          "default": "name.asc"
        },
        "relations": {
          "hasMany": [
            {
              "model": "m:group",
              "type": "submodel"
            }
          ]
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "example": "{string:7}"
        },
        "name": {
          "$ref": "#/definitions/sm:mlvalue",
          "example": {
            "en": "Heroes"
          },
          "x-pcg": {
            "ml": true,
            "searchable": true
          }
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "m:group": {
      "type": "object",
      "title": "Group",
      "additionalProperties": false,
      "x-pcg": {
        "rest-alias": "groups",
        "pagination": true,
        "sort": {
          "default": "name.asc"
        },
        "relations": {
          "belongsTo": [
            {
              "model": "m:project",
              "as": "submodel"
            }
          ],
          "hasMany": [
            {
              "model": "m:question",
              "type": "submodel"
            }
          ]
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "x-pcg": {
            "generated": true
          }
        },
        "name": {
          "$ref": "#/definitions/sm:mlvalue",
          "example": {
            "en": "Group"
          },
          "x-pcg": {
            "ml": true,
            "searchable": true
          }
        },
        "projectId": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "m:question": {
      "type": "object",
      "title": "Question",
      "additionalProperties": false,
      "x-pcg": {
        "rest-alias": "questions",
        "pagination": true,
        "sort": {
          "default": "text.asc"
        },
        "relations": {
          "belongsTo": [
            {
              "model": "m:group",
              "as": "submodel"
            }
          ]
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "example": "HQ{string:7}"
        },
        "text": {
          "type": "string",
          "minLength": 1,
          "example": "Some text"
        },
        "reference": {
          "type": "string",
          "minLength": 1,
          "example": "Some text"
        },
        "line": {
          "type": "integer",
          "minimum": 0,
          "example": 2
        },
        "level": {
          "type": "integer",
          "minimum": 0,
          "example": 2
        },
        "cleared": {
          "type": "boolean",
          "default": false
        },
        "groupId": {
          "type": "string",
          "minLength": 1
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/m:answer"
          }
        }
      },
      "required": [
        "id",
        "text",
        "reference",
        "line",
        "level",
        "answers"
      ]
    },
    "m:answer": {
      "type": "object",
      "title": "Element Bot",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "example": "HQ{string:7}"
        },
        "text": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "m:translation": {
      "type": "object",
      "title": "Translation",
      "additionalProperties": false,
      "x-pcg": {
        "rest-alias": "translations",
        "pagination": true,
        "sort": {
          "default": "lang.asc"
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "x-pcg": {
            "generated": true
          }
        },
        "lang": {
          "type": "string",
          "minLength": 1,
          "example": "ru"
        },
        "ref": {
          "type": "string",
          "minLength": 1,
          "example": "Some text",
          "x-pcg": {
            "get-action": true
          }
        },
        "text": {
          "type": "string",
          "minLength": 1,
          "example": "Some text"
        }
      },
      "required": [
        "id",
        "lang",
        "ref",
        "text"
      ]
    },
    "m:language": {
      "type": "object",
      "title": "Language",
      "description": "The properties that are shared amongst all versions of the Language model.",
      "additionalProperties": false,
      "x-pcg": {
        "rest-alias": "languages",
        "pagination": true,
        "sort": {
          "default": "title.asc"
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "example": "{string:8}"
        },
        "title": {
          "$ref": "#/definitions/sm:mlvalue",
          "example": {
            "en": "English"
          },
          "minLength": 1,
          "x-pcg": {
            "ml": true,
            "searchable": true
          }
        },
        "index": {
          "type": "integer",
          "minimum": 0,
          "x-pcg": {
            "index": true
          }
        }
      },
      "required": [
        "id",
        "title"
      ]
    },
    "sm:page-meta": {
      "type": "object",
      "title": "Shared: Page Meta",
      "properties": {
        "total": {
          "type": "number"
        },
        "limit": {
          "type": "number"
        },
        "offset": {
          "type": "number"
        }
      },
      "required": [
        "total"
      ]
    },
    "sm:mlvalue": {
      "type": [
        "object",
        "string"
      ],
      "title": "Shared: mlvalue",
      "description": "Multilang string"
    },
    "sm:mldata": {
      "type": "object",
      "properties": {},
      "title": "Shared: MLData",
      "description": "Multilang object"
    },
    "sm:file": {
      "type": "object",
      "title": "Shared: File",
      "additionalProperties": false,
      "description": "File Model",
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1,
          "description": "File ID"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "File name"
        },
        "ext": {
          "type": "string",
          "minLength": 1,
          "description": "File extension"
        },
        "url": {
          "type": "string",
          "description": "File URL on the server",
          "format": "uri"
        },
        "size": {
          "type": "number",
          "description": "File size (bytes)"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "mimeType": {
          "type": "string",
          "description": "Media type of File",
          "pattern": "^.+\\/.+$"
        },
        "props": {
          "type": "object",
          "properties": {
            "parentId": {
              "type": "string",
              "minLength": 1
            },
            "parentUrl": {
              "type": "string",
              "format": "uri"
            },
            "cropMask": {
              "type": "string",
              "minLength": 1
            }
          }
        }
      },
      "required": [
        "id",
        "url",
        "mimeType"
      ]
    },
    "m:project-input": {
      "type": "object",
      "title": "Project (Input)",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "$ref": "#/definitions/sm:mldata"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "m:project-update-input": {
      "type": "object",
      "title": "Project (Update Input)",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "$ref": "#/definitions/sm:mldata"
        }
      }
    },
    "m:group-input": {
      "type": "object",
      "title": "Group (Input)",
      "additionalProperties": false,
      "properties": {
        "name": {
          "$ref": "#/definitions/sm:mldata"
        }
      },
      "required": [
        "name"
      ]
    },
    "m:group-update-input": {
      "type": "object",
      "title": "Group (Update Input)",
      "additionalProperties": false,
      "properties": {
        "name": {
          "$ref": "#/definitions/sm:mldata"
        }
      }
    },
    "m:question-input": {
      "type": "object",
      "title": "Question (Input)",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1
        },
        "text": {
          "type": "string",
          "minLength": 1
        },
        "reference": {
          "type": "string",
          "minLength": 1
        },
        "line": {
          "type": "integer",
          "minimum": 0
        },
        "level": {
          "type": "integer",
          "minimum": 0
        },
        "cleared": {
          "type": "boolean"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/m:answer"
          }
        }
      },
      "required": [
        "id",
        "text",
        "reference",
        "line",
        "level",
        "answers"
      ]
    },
    "m:question-update-input": {
      "type": "object",
      "title": "Question (Update Input)",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1
        },
        "text": {
          "type": "string",
          "minLength": 1
        },
        "reference": {
          "type": "string",
          "minLength": 1
        },
        "line": {
          "type": "integer",
          "minimum": 0
        },
        "level": {
          "type": "integer",
          "minimum": 0
        },
        "cleared": {
          "type": "boolean"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/m:answer"
          }
        }
      }
    },
    "m:translation-input": {
      "type": "object",
      "title": "Translation (Input)",
      "additionalProperties": false,
      "properties": {
        "lang": {
          "type": "string",
          "minLength": 1
        },
        "ref": {
          "type": "string",
          "minLength": 1
        },
        "text": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "lang",
        "ref",
        "text"
      ]
    },
    "m:translation-update-input": {
      "type": "object",
      "title": "Translation (Update Input)",
      "additionalProperties": false,
      "properties": {
        "lang": {
          "type": "string",
          "minLength": 1
        },
        "ref": {
          "type": "string",
          "minLength": 1
        },
        "text": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "m:language-input": {
      "type": "object",
      "title": "Language (Input)",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1
        },
        "title": {
          "$ref": "#/definitions/sm:mldata"
        },
        "index": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "title"
      ]
    },
    "m:language-update-input": {
      "type": "object",
      "title": "Language (Update Input)",
      "additionalProperties": false,
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1
        },
        "title": {
          "$ref": "#/definitions/sm:mldata"
        },
        "index": {
          "type": "integer",
          "minimum": 0
        }
      }
    }
  },
  "parameters": {
    "limit": {
      "name": "limit",
      "in": "query",
      "type": "integer",
      "default": 10,
      "maximum": 200,
      "minimum": 1
    },
    "id": {
      "name": "id",
      "in": "path",
      "type": "string",
      "required": true,
      "minLength": 1
    },
    "subid": {
      "name": "subid",
      "in": "path",
      "type": "string",
      "required": true,
      "minLength": 1
    },
    "offset": {
      "name": "offset",
      "in": "query",
      "type": "integer",
      "minimum": 0,
      "default": 0
    },
    "text": {
      "name": "text",
      "in": "query",
      "type": "string",
      "maxLength": 100
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/projects/{id}": {
      "get": {
        "summary": "Get Project",
        "operationId": "project:get",
        "x-pcg": {
          "model": "m:project",
          "action": "get"
        },
        "parameters": [
          {
            "in": "query",
            "name": "ml",
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:project"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Project",
        "operationId": "project:update",
        "x-pcg": {
          "model": "m:project",
          "action": "update"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/m:project-update-input"
            },
            "x-examples": {
              "application/json": {
                "id": "WyJpZCI2",
                "name": {
                  "en": "Heroes"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ml",
            "type": "boolean",
            "default": true
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:project"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "Delete Project",
        "operationId": "project:delete",
        "x-pcg": {
          "model": "m:project",
          "action": "delete"
        },
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/id"
        }
      ]
    },
    "/projects": {
      "get": {
        "summary": "List Project",
        "operationId": "project:list",
        "x-pcg": {
          "model": "m:project",
          "action": "list"
        },
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string",
            "default": "name.asc"
          },
          {
            "$ref": "#/parameters/text"
          },
          {
            "in": "query",
            "name": "ml",
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "projects": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/m:project"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/sm:page-meta"
                }
              },
              "required": [
                "projects",
                "meta"
              ]
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "summary": "Create Project",
        "operationId": "project:create",
        "x-pcg": {
          "model": "m:project",
          "action": "create"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/m:project-input"
            },
            "x-examples": {
              "application/json": {
                "id": "WyJpZCI1",
                "name": {
                  "en": "Heroes"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ml",
            "type": "boolean",
            "default": true
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:project"
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/projects/{id}/groups": {
      "get": {
        "summary": "List Groups",
        "operationId": "project:list-groups",
        "x-pcg": {
          "model": "m:project",
          "action": "list-child",
          "submodel": {
            "name": "m:group"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string",
            "default": "name.asc"
          },
          {
            "$ref": "#/parameters/text"
          },
          {
            "in": "query",
            "name": "ml",
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "groups": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/m:group"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/sm:page-meta"
                }
              },
              "required": [
                "groups",
                "meta"
              ]
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/id"
        }
      ],
      "post": {
        "summary": "Create Group",
        "operationId": "project:create-group",
        "x-pcg": {
          "model": "m:project",
          "action": "create-child",
          "submodel": {
            "name": "m:group"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/m:group-input"
            },
            "x-examples": {
              "application/json": {
                "name": {
                  "en": "Group"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ml",
            "type": "boolean",
            "default": true
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:group"
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/groups/{id}": {
      "get": {
        "summary": "Get Group",
        "operationId": "group:get",
        "x-pcg": {
          "model": "m:group",
          "action": "get"
        },
        "parameters": [
          {
            "in": "query",
            "name": "ml",
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:group"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Group",
        "operationId": "group:update",
        "x-pcg": {
          "model": "m:group",
          "action": "update"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/m:group-update-input"
            },
            "x-examples": {
              "application/json": {
                "name": {
                  "en": "Group"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "ml",
            "type": "boolean",
            "default": true
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:group"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "Delete Group",
        "operationId": "group:delete",
        "x-pcg": {
          "model": "m:group",
          "action": "delete"
        },
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/id"
        }
      ]
    },
    "/groups/{id}/questions": {
      "get": {
        "summary": "List Questions",
        "operationId": "group:list-questions",
        "x-pcg": {
          "model": "m:group",
          "action": "list-child",
          "submodel": {
            "name": "m:question"
          }
        },
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string",
            "default": "text.asc"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "questions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/m:question"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/sm:page-meta"
                }
              },
              "required": [
                "questions",
                "meta"
              ]
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/id"
        }
      ],
      "post": {
        "summary": "Create Question",
        "operationId": "group:create-question",
        "x-pcg": {
          "model": "m:group",
          "action": "create-child",
          "submodel": {
            "name": "m:question"
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/m:question-input"
            },
            "x-examples": {
              "application/json": {
                "id": "HQWyJpZCI4",
                "text": "Some text",
                "reference": "Some text",
                "line": 2,
                "level": 2,
                "cleared": false,
                "answers": []
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:question"
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/questions/{id}": {
      "get": {
        "summary": "Get Question",
        "operationId": "question:get",
        "x-pcg": {
          "model": "m:question",
          "action": "get"
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:question"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Question",
        "operationId": "question:update",
        "x-pcg": {
          "model": "m:question",
          "action": "update"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/m:question-update-input"
            },
            "x-examples": {
              "application/json": {
                "id": "HQWyJpZCI5",
                "text": "Some text",
                "reference": "Some text",
                "line": 2,
                "level": 2,
                "cleared": false,
                "answers": []
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:question"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "Delete Question",
        "operationId": "question:delete",
        "x-pcg": {
          "model": "m:question",
          "action": "delete"
        },
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/id"
        }
      ]
    },
    "/translations/{id}": {
      "get": {
        "summary": "Get Translation",
        "operationId": "translation:get",
        "x-pcg": {
          "model": "m:translation",
          "action": "get"
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:translation"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Translation",
        "operationId": "translation:update",
        "x-pcg": {
          "model": "m:translation",
          "action": "update"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/m:translation-update-input"
            },
            "x-examples": {
              "application/json": {
                "lang": "ru",
                "ref": "Some text",
                "text": "Some text"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:translation"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "Delete Translation",
        "operationId": "translation:delete",
        "x-pcg": {
          "model": "m:translation",
          "action": "delete"
        },
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/id"
        }
      ]
    },
    "/translations": {
      "get": {
        "summary": "List Translation",
        "operationId": "translation:list",
        "x-pcg": {
          "model": "m:translation",
          "action": "list"
        },
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string",
            "default": "lang.asc"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "translations": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/m:translation"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/sm:page-meta"
                }
              },
              "required": [
                "translations",
                "meta"
              ]
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "summary": "Create Translation",
        "operationId": "translation:create",
        "x-pcg": {
          "model": "m:translation",
          "action": "create"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/m:translation-input"
            },
            "x-examples": {
              "application/json": {
                "lang": "ru",
                "ref": "Some text",
                "text": "Some text"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:translation"
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/translations/byRef/{ref}": {
      "get": {
        "summary": "Get Translation by Ref",
        "operationId": "translation:get-by-ref",
        "x-pcg": {
          "property": "ref",
          "model": "m:translation",
          "action": "get-by-property"
        },
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:translation"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "name": "ref",
          "in": "path",
          "type": "string",
          "required": true,
          "minLength": 1
        }
      ]
    },
    "/languages/{id}": {
      "get": {
        "summary": "Get Language",
        "operationId": "language:get",
        "x-pcg": {
          "model": "m:language",
          "action": "get"
        },
        "parameters": [
          {
            "in": "query",
            "name": "ml",
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:language"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "summary": "Update Language",
        "operationId": "language:update",
        "x-pcg": {
          "model": "m:language",
          "action": "update"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/m:language-update-input"
            },
            "x-examples": {
              "application/json": {
                "id": "WyJpZCIs2",
                "title": {
                  "en": "English"
                },
                "index": 0
              }
            }
          },
          {
            "in": "query",
            "name": "ml",
            "type": "boolean",
            "default": true
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:language"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "summary": "Delete Language",
        "operationId": "language:delete",
        "x-pcg": {
          "model": "m:language",
          "action": "delete"
        },
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/id"
        }
      ]
    },
    "/languages": {
      "get": {
        "summary": "List Language",
        "operationId": "language:list",
        "x-pcg": {
          "model": "m:language",
          "action": "list"
        },
        "parameters": [
          {
            "$ref": "#/parameters/limit"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string",
            "default": "title.asc",
            "enum": [
              "index.asc"
            ]
          },
          {
            "$ref": "#/parameters/text"
          },
          {
            "in": "query",
            "name": "ml",
            "type": "boolean"
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "languages": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/m:language"
                  }
                },
                "meta": {
                  "$ref": "#/definitions/sm:page-meta"
                }
              },
              "required": [
                "languages",
                "meta"
              ]
            }
          },
          "default": {
            "description": ""
          }
        }
      },
      "post": {
        "summary": "Create Language",
        "operationId": "language:create",
        "x-pcg": {
          "model": "m:language",
          "action": "create"
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/m:language-input"
            },
            "x-examples": {
              "application/json": {
                "id": "WyJpZCIs1",
                "title": {
                  "en": "English"
                },
                "index": 0
              }
            }
          },
          {
            "in": "query",
            "name": "ml",
            "type": "boolean",
            "default": true
          },
          {
            "in": "header",
            "name": "Accept-Language",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/m:language"
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    },
    "/languages/reorder": {
      "post": {
        "summary": "Reorder Languages",
        "x-pcg": {
          "model": "m:language",
          "action": "reorder"
        },
        "description": "Changing an order of Languages",
        "operationId": "language:reorder",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "minProperties": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "string"
                },
                "meta": {
                  "minProperties": 2
                }
              },
              "required": [
                "state"
              ]
            }
          },
          "default": {
            "description": ""
          }
        }
      }
    }
  }
}
